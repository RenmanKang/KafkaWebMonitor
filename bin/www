/**
 * Module dependencies.
 */
var debug = require('debug')('kwm:server');
var http = require('http');
var conf = require('../conf/config');
var app = require('../app');

/**
 * Get port from environment and store in Express.
 */
var port = conf.port || 9000;
app.set('port', port);

/**
 * Create HTTP server.
 */
var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

var chart = require('../routes/chart');
var socketIO = require('socket.io').listen(server);
socketIO.sockets.on('connection', function(socket) {
	socket.emit('connected', { msg:'Welcome !' });

	socket.on('disconnect', function() {
		//console.log('Socket has disconnected. ID:'+socket.id);
		chart.stopChart(socket);
	});
	socket.on('req', function(req) {
		chart.requestChart(socket, req);
	})
});

/**
 * Event listener for HTTP server "error" event.
 */
function onError(error) {
	if (error.syscall !== 'listen') {
		throw error;
	}

	var bind = typeof port === 'string'
		? 'Pipe ' + port
		: 'Port ' + port;

	// handle specific listen errors with friendly messages
	switch (error.code) {
		case 'EACCES':
			console.error(bind + ' requires elevated privileges');
			process.exit(1);
			break;
		case 'EADDRINUSE':
			console.error(bind + ' is already in use');
			process.exit(1);
			break;
		default:
			throw error;
	}
}

/**
 * Event listener for HTTP server "listening" event.
 */
function onListening() {
	var addr = server.address();
	var bind = (typeof addr === 'string') ? 'pipe ' + addr : 'port ' + addr.port;
	var msg = 'Starting KafkaWebMonitor. Listening on ' + bind;
	debug(msg);
	console.log(msg);
}
